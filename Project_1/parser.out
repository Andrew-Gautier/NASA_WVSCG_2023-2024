Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> code
Rule 1     code -> code COMMENT
Rule 2     code -> code CODE
Rule 3     code -> COMMENT
Rule 4     code -> CODE

Terminals, with rules where they appear

CODE                 : 2 4
COMMENT              : 1 3
error                : 

Nonterminals, with rules where they appear

code                 : 1 2 0

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . code COMMENT
    (2) code -> . code CODE
    (3) code -> . COMMENT
    (4) code -> . CODE

    COMMENT         shift and go to state 2
    CODE            shift and go to state 3

    code                           shift and go to state 1

state 1

    (0) S' -> code .
    (1) code -> code . COMMENT
    (2) code -> code . CODE

    COMMENT         shift and go to state 4
    CODE            shift and go to state 5


state 2

    (3) code -> COMMENT .

    COMMENT         reduce using rule 3 (code -> COMMENT .)
    CODE            reduce using rule 3 (code -> COMMENT .)
    $end            reduce using rule 3 (code -> COMMENT .)


state 3

    (4) code -> CODE .

    COMMENT         reduce using rule 4 (code -> CODE .)
    CODE            reduce using rule 4 (code -> CODE .)
    $end            reduce using rule 4 (code -> CODE .)


state 4

    (1) code -> code COMMENT .

    COMMENT         reduce using rule 1 (code -> code COMMENT .)
    CODE            reduce using rule 1 (code -> code COMMENT .)
    $end            reduce using rule 1 (code -> code COMMENT .)


state 5

    (2) code -> code CODE .

    COMMENT         reduce using rule 2 (code -> code CODE .)
    CODE            reduce using rule 2 (code -> code CODE .)
    $end            reduce using rule 2 (code -> code CODE .)

